xlim=c(-18*288,(6*30*288)-18*288)
xlim
xlim=c(-((4+31)*288),(6*30*288)-((4+31)*288))
xlim
xlim=c(-((31+31+26)*288),(6*30*288)-(31+31+26)*288)
xlim
xlim=c(-((20)*288),(6*30*288)-(20)*288)
xlim
xlim=c(-((28)*288),(6*30*288)-(28)*288)
xlim
xlim=c(-((28)*288),(6*30*288)-(28)*288)
xlim
at = seq(from =-28*288, to= 8640*6, by = 8640)
at
at = seq(from =-18*288, to= 8640*6, by = 8640)
at
at = seq(from =-((4+31)*288), to= 8640*5, by = 8640)
at
at = seq(from =-(31+31+26)*288, to= 8640*4, by = 8640)
at
xlim
axis_fun_1<- ifelse(data_name == 'gap1',x_lim<-c(-18*288,(6*30*288)-18*288),
ifelse(data_name == 'gap2',x_lim<-c(-((4+31)*288),(6*30*288)-((4+31)*288))
axis_fun_1<- ifelse(data_name == 'gap1',x_lim<-c(-18*288,(6*30*288)-18*288),
ifelse(data_name == 'gap2',x_lim<-c(-((4+31)*288),(6*30*288)-((4+31)*288)))
data<-gap1
data_name <-'gap1'
rm(list=ls())
library(dplR)
library(xts)
library(matrixStats)
library(lubridate)
library(ggplot2)   # use at least 0.9.3 for theme_minimal()
gap1 = read.csv("VA_2011-2012.csv",na.strings=c("NA"," - "),header=F)
gap2 = read.csv("VA_2012-2013.csv",na.strings=c("NA"," - "),header=F)
w1E = read.csv("IN_2011-2012 (Entrance).csv",na.strings=c("NA"," - "),header=F)
w2E = read.csv("IN_2012-2013 (Entrance).csv",na.strings=c("NA"," - "),header=F)
w3E = read.csv("IN_2013-2014 (Entrance).csv",na.strings=c("NA"," - "),header=F)
w1H = read.csv("IN_2013-2014 (Deeper).csv",na.strings=c("NA"," - "),header=F)
data<-gap1
data_name <-'gap1'
data<-gap2
data_name <-'gap2'
lim_fun_1<- ifelse(data_name == 'gap1',x_lim<-c(-18*288,(6*30*288)-18*288),
ifelse(data_name == 'gap2',x_lim<-c(-((4+31)*288),(6*30*288)-((4+31)*288)))
x_lim<- ifelse(data_name == 'gap1',c(-18*288,(6*30*288)-18*288),
ifelse(data_name == 'gap2',c(-((4+31)*288),(6*30*288)-((4+31)*288)))
x_lim<- ifelse(data_name == 'gap1',c(-18*288,(6*30*288)-18*288),
ifelse(data_name == 'gap2',c(-((4+31)*288),(6*30*288)-((4+31)*288))))
plot(data,xlim=x_lim,type='l',ylab="No. saturated pixels",xlab='time', xaxt='n',main=data_name)
data<-as.vector(t(as.matrix(data,header=F)))
plot(data,xlim=x_lim,type='l',ylab="No. saturated pixels",xlab='time', xaxt='n',main=data_name)
x_lim
x_lim<- ifelse(data_name == 'gap1',print(c(-18*288,(6*30*288)-18*288)),
ifelse(data_name == 'gap2',print(c(-((4+31)*288),(6*30*288)-((4+31)*288)))))
plot(data,xlim=x_lim,type='l',ylab="No. saturated pixels",xlab='time', xaxt='n',main=data_name)
x_lim
x_lim<- ifelse(data_name == 'gap1',print(c(-18*288,(6*30*288)-18*288)),
ifelse(data_name == 'gap2',print(c(-((4+31)*288),(6*30*288)-((4+31)*288)))))
dim(x_lim)
length(x_lim)
x_lim
axis_fun_1<- ifelse(data_name == 'gap1',ax_1<-seq(from=0,to=max(gap1),by=10),
ifelse(data_name == 'gap2',ax_1<-seq(from=0,to=max(gap2),by=10)))
axis_fun_1
x_lim_fun<- ifelse(data_name == 'gap1',x_lim<-(c(-18*288,(6*30*288)-18*288)),
ifelse(data_name == 'gap2',x_lim<-(c(-((4+31)*288),(6*30*288)-((4+31)*288)))))
x_lim_fun
x_lim
plot(data,xlim=x_lim,type='l',ylab="No. saturated pixels",xlab='time', xaxt='n',main=data_name)
mins_fun<- ifelse(data_name == 'gap1',at = seq(from =-18*288, to= 8640*6, by = 8640),
ifelse(data_name == 'gap2',at = seq(from =-((4+31)*288), to= 8640*5, by = 8640))
mins_fun<- ifelse(data_name == 'gap1',at_1 = seq(from =-18*288, to= 8640*6, by = 8640),
ifelse(data_name == 'gap2',at_1 = seq(from =-((4+31)*288), to= 8640*5, by = 8640)))
mins_fun<- ifelse(data_name == 'gap1',at_1 = seq(from =-18*288, to= 8640*6, by = 8640),
ifelse(data_name == 'gap2',at_1 = seq(from =-((4+31)*288), to= 8640*5, by = 8640)))
seq(from = -((4+31)*288), to= 8640*5, by = 8640)
mins_fun<- ifelse(data_name == 'gap1',at_1 = seq(from =-18*288, to= 8640*6, by = 8640),
ifelse(data_name == 'gap2',at_1 = seq(from = -((4+31)*288), to= 8640*5, by = 8640)))
at_fun<- ifelse(data_name == 'gap1',at_1 = seq(from =-18*288, to= 8640*6, by = 8640),
ifelse(data_name == 'gap2',at_1 = seq(from = -((4+31)*288), to= 8640*5, by = 8640)))
data<-as.vector(t(as.matrix(data,header=F)))
at_fun<- ifelse(data_name == 'gap1',at_1 = seq(from =-18*288, to= 8640*6, by = 8640),
ifelse(data_name == 'gap2',at_1 = seq(from = -(4+31)*288, to= 8640*5, by = 8640)))
at_fun<- ifelse(data_name == 'gap1',at_1 = (seq(from = -18*288, to= 8640*6, by = 8640)),
ifelse(data_name == 'gap2',at_1 = seq(from = -(4+31)*288, to= 8640*5, by = 8640)))
at_fun
at_fun <- ifelse(data_name == 'gap1',at_1<-seq(from = -18*288, to= 8640*6, by = 8640),
ifelse(data_name == 'gap2',at_1<-seq(from = -(4+31)*288, to= 8640*5, by = 8640))
)
at_fun <- ifelse(data_name == 'gap1',at_1<-seq(from = -18*288, to= 8640*6, by = 8640),
ifelse(data_name == 'gap2',at_1<-seq(from = -(4+31)*288, to= 8640*5, by = 8640)))
at_fun
at_1
plot(data,xlim=x_lim,type='l',ylab="No. saturated pixels",xlab='time', xaxt='n',main=data_name)
axis(side=1, at = at_1,
labels = c("Nov","Dec","Jan","Feb","Mar","Apr","May"), tick = TRUE,
lty=2)
getwd()
source('~/GitHub/cave_data/code_files/cave_day.R')
pdf(file = paste(data_name,"_rose.pdf",sep=''))
ggplot(data_rose_r_plot, aes(x = x)) + geom_histogram(breaks = seq(0,24), colour = "grey") + coord_polar(start = 0) + theme_minimal() +
scale_fill_brewer() + ylab("Pixel count") + ggtitle(paste(data_name,"\n Activity by hour")) +
scale_x_continuous("", limits = c(0, 24), breaks = seq(0, 24), labels = seq(0, 24))
dev.off()
